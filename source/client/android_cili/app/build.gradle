plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-noarg'
    id 'kotlin-allopen'
    id 'dagger.hilt.android.plugin'
    id 'jacoco'
}

//lancet {
////    enable = true  // ← 必须为true
//    incremental = false  // 首次调试建议关闭增量编译
//}

jacoco {
    toolVersion = "0.8.7" // 与插件版本一致
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*']
}
android {
    namespace = "com.vincent.android.cili"
    compileSdk = 35
    buildToolsVersion "34.0.0"
    testOptions {
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
                excludes = ['jdk.internal.*']
            }
        }
    }
    defaultConfig {

        applicationId "com.vincent.android.cili"
        minSdk = 24
        targetSdk = 35
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        buildConfig = true
        dataBinding true
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.11'
    }

// noArg {
//     annotation("com.vincent.android.cili.anotation.NoArgAllOpen")
// }
//
// allOpen {
//     annotation("com.vincent.android.cili.anotation.NoArgAllOpen")
// }
}

dependencies {


    implementation project(path: ':lib_arch')
    implementation project(path: ':lib_ble')
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.14'

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.11.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0' // 已废弃，建议移除
    implementation 'androidx.navigation:navigation-fragment:2.7.7'
    implementation 'androidx.navigation:navigation-ui:2.7.7'
    implementation 'androidx.activity:activity-ktx:1.9.0'
    implementation 'androidx.fragment:fragment-ktx:1.7.0'
    def lifecycle_version = "2.7.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    implementation 'com.github.bumptech.glide:glide:4.16.0'
    kapt 'com.github.bumptech.glide:compiler:4.16.0'
    implementation 'com.github.bumptech.glide:okhttp3-integration:4.16.0'
    implementation 'androidx.activity:activity-compose:1.9.0'
    implementation 'androidx.compose.material:material:1.6.7'
    implementation 'androidx.compose.animation:animation:1.6.7'
    implementation 'androidx.compose.ui:ui-tooling:1.6.7'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.7.0'
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4:1.6.7'
    implementation 'androidx.compose.runtime:runtime-livedata:1.6.7'
    implementation 'io.coil-kt:coil-compose:2.6.0'
    implementation "com.google.dagger:hilt-android:2.51.1"
    kapt "com.google.dagger:hilt-android-compiler:2.51.1"
    implementation 'androidx.hilt:hilt-navigation-compose:1.2.0'
    implementation 'com.github.zhujiang521:Banner:1.6.0'
    implementation 'com.google.android.exoplayer:exoplayer:2.19.1'
    implementation "com.squareup.moshi:moshi:1.15.0"
    implementation "com.squareup.moshi:moshi-kotlin:1.15.0"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:1.15.0"
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-moshi:2.9.0"
    implementation 'com.squareup.okhttp3:logging-interceptor:4.12.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.21'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation "androidx.datastore:datastore-preferences:1.0.0"
    implementation "androidx.datastore:datastore-core:1.0.0"
    implementation 'com.airbnb.android:lottie:6.3.0'
    implementation "com.google.accompanist:accompanist-swiperefresh:0.33.2-alpha"

    implementation "com.github.tbruyelle:rxpermissions:0.10.2"
}

// ./gradlew clean jacocoTestReport 生成检测报告 app/build/reports/jacoco
task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest']) {
    group = "Reporting"
    description = "Generate Jacoco coverage reports"

    reports {
        xml.required = true
        html.required = true
    }

    def fileFilter = [
            '**/R.class',
            '**/R$*.class',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            '**/*Test*.*',
            'android/**/*.*',
            '**/*$[0-9].*'
    ]

    def debugTree = fileTree(dir: "${buildDir}/intermediates/javac/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories.setFrom(files([mainSrc]))
    classDirectories.setFrom(files([debugTree]))
    executionData.setFrom(fileTree(dir: "$buildDir", includes: [
            "jacoco/testDebugUnitTest.exec",
            "outputs/unit_test_code_coverage/debugUnitTest/testDebugUnitTest.exec"
    ]))
}